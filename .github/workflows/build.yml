name: 'Build'
on:
  push:
  repository_dispatch:
  schedule:
    - cron: '30 0 * * *'
jobs:
  build:
    name: build
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1']
        extensions: [pcov, xdebug]
        sdk_version: [master]
        vs: [vs16]
        ts: [ts, nts]
        arch: [x64, x86]
        include:
          - extensions: pcov
            repo: krakjoe/pcov
            branch: develop
            args: enable-pcov
          - extensions: xdebug
            repo: xdebug/xdebug
            branch: master
            args: with-xdebug
    steps:
    - uses: actions/checkout@v2
    - name: build
      run: pwsh .github/scripts/builder.ps1 ${{ matrix.extensions }} ${{ matrix.repo }} ${{ matrix.branch }} ${{ matrix.args }} ${{ matrix.sdk_version }} ${{ matrix.vs }} ${{ matrix.arch }} ${{ matrix.ts }} ${{ matrix.php }}
    - name: Copy
      run: |
        mkdir ${{ matrix.extensions }}
        if(Test-Path C:\projects\${{ matrix.extensions }}\Release\php_${{ matrix.extensions }}.dll) {
          write-Output "copy x86 nts"
          Copy-Item -Path C:\projects\${{ matrix.extensions }}\Release\php_${{ matrix.extensions }}.dll -Destination ${{ matrix.extensions }}\php${{ matrix.php }}_nts_x86_${{ matrix.extensions }}.dll
        }
        if(Test-Path C:\projects\${{ matrix.extensions }}\Release_TS\php_${{ matrix.extensions }}.dll) {
          write-Output "copy x86 ts"
          Copy-Item -Path C:\projects\${{ matrix.extensions }}\Release_TS\php_${{ matrix.extensions }}.dll -Destination ${{ matrix.extensions }}\php${{ matrix.php }}_ts_x86_${{ matrix.extensions }}.dll
        }
        if(Test-Path C:\projects\${{ matrix.extensions }}\x64\Release\php_${{ matrix.extensions }}.dll) {
          write-Output "copy x64 nts"
          Copy-Item -Path C:\projects\${{ matrix.extensions }}\x64\Release\php_${{ matrix.extensions }}.dll -Destination ${{ matrix.extensions }}\php${{ matrix.php }}_nts_x64_${{ matrix.extensions }}.dll
        }
        if(Test-Path C:\projects\${{ matrix.extensions }}\x64\Release_TS\php_${{ matrix.extensions }}.dll) {
          write-Output "copy x64 ts"
          Copy-Item -Path C:\projects\${{ matrix.extensions }}\x64\Release_TS\php_${{ matrix.extensions }}.dll -Destination ${{ matrix.extensions }}\php${{ matrix.php }}_ts_x64_${{ matrix.extensions }}.dll
        }
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.extensions }}_${{ matrix.ts }}_${{ matrix.arch }}
        path: ${{ matrix.extensions }}
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - run: mkdir ext
    - uses: actions/download-artifact@v2
      with:
        path: ext
    - name: Release
      run: |
        set -x
        assets=()
        for asset in ./ext/*/*.dll; do
          assets+=("$asset")
        done
        gh release delete "builds" -y || true
        gh release create "builds" "${assets[@]}" -t "builds" -n "builds"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
